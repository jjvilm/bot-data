<!DOCTYPE html>
<html lang="en">
<%- include('../partials/headfile'); %>
<link rel="stylesheet" href="/stylesheets/botList.css" />
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bot Hunting Data</title>
    <style>
        h1,h4 {
            text-align: center;
        }
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid #0d0c0c;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #7d7d7d;
        }
        .center {
            margin: auto;
            width: 50%;
            padding: 10px;
            text-align: center;
            }
    </style>
</head>
<body>
    <%- include('../partials/navbar'); %>
    <a href="/deRoute/botList" class="btn btn-primary">All Bots</a>
    <a href="/deRoute/topWorlds" class="btn btn-primary">Top Worlds</a>
    <a href="/qcRoute" class="btn btn-primary">Recent Kills</a>
    <dev>
        <h1><%= bots.bot_name %></h1>
        <div class="container center" id="equipment-images-<%= bots._id %>">
        </div>
        <h4>(Combat Level: <%= bots.combat_lv %>)</h4>
    </dev>
    
    <table class="table table-striped table-dark table-hover">
        <thead>
            <tr>
                <th>World</th>
                <th>Kill Frequency</th>
                <th>Hunter</th>
                <th>Date</th>
                <th>Time</th>
                <th>Loot Amount</th>
            </tr>
        </thead>
        <tbody>
            <% 
            // Convert the 'worlds' Map to an array of entries and iterate over them
            Array.from(bots.worlds.entries()).forEach(function([world, worldData]) { 
            %>
                <% if (worldData.kills && Array.isArray(worldData.kills)) { %>
                    <% worldData.kills.forEach(function(kill, index) { %>
                        <tr>
                            <% if (index === 0) { %>
                                <!-- Display the World and Kill Frequency only in the first row for each world -->
                                <td rowspan="<%= worldData.kills.length %>"><%= world %></td>
                                <td rowspan="<%= worldData.kills.length %>"><%= worldData.kill_frequency %></td>
                            <% } %>
                            <!-- Display the Kill Date if it exists, otherwise show a placeholder -->
                            <td>
                                <a href="/qcRoute/player-latest-bots?hunter_name=<%= kill.hunter_name %>" style="color: white;">
                                    <%= kill.hunter_name %>
                                </a>
                            </td>
                            
                            <td>
                                <% if (kill && kill.kill_date !== undefined && kill.kill_date !== null) { %>
                                    <!-- since the date is store as a date datatype, use the following to exract only YYYY-MM-DD -->
                                    <%= new Date(kill.kill_date).toISOString().split('T')[0] %>
                                <% } else { %>
                                    -
                                <% } %>
                            </td>
                            
                                                        
                            <td><%= new Date(kill.kill_date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) %></td>
                            <td><%= formatNumber(kill.loot_amount) %></td>

                        </tr>
                    <% }); %>
                <% } else { %>
                    <tr>
                        <td><%= world %></td>
                        <td><%= worldData.kill_frequency %></td>
                        <td colspan="3">No kill data available</td>
                    </tr>
                <% } %>
            <% }); %>
        </tbody>
    </table>
    <script>
        async function fetchEquipmentSet(botId, setName) {
        if (!setName) {
            return
            console.warn(`No set name provided for bot ID: ${botId}`);
        }
        try {
            const response = await fetch(`/deRoute/getEquipmentSetByName?set_name=${setName}`);
            const equipmentSet = await response.json();

            if (!response.ok) {
                return;
                console.error("bad response")
            }

            // Only proceed if we received valid equipment set data
            
            if (equipmentSet && equipmentSet.set_name) {
                const equipmentImagesContainer = document.getElementById(`equipment-images-${botId}`);

                // Check if the container exists in the DOM
                if (!equipmentImagesContainer) {
                    return;
                    console.error(`Could not find container for bot ID: ${botId}`);
                }

                // Add each equipment image if it exists
                const equipmentPieces = [
                    { key: 'head', label: 'Head' },
                    { key: 'cape', label: 'Cape' },
                    { key: 'neck', label: 'Neck' },
                    { key: 'ammunition', label: 'Ammunition' },
                    { key: 'left_hand', label: 'Left Hand' },
                    { key: 'torso', label: 'Torso' },
                    { key: 'right_hand', label: 'Right Hand' },
                    { key: 'legs', label: 'Legs' },
                    { key: 'hands', label: 'Hands' },
                    { key: 'feet', label: 'Feet' },
                    { key: 'jewelry', label: 'Jewelry' }
                    ];

                equipmentPieces.forEach(piece => {
                    const imageUrl = equipmentSet[piece.key];
                    if (imageUrl) {
                        const img = document.createElement('img');
                        img.src = imageUrl;
                        img.alt = piece.label;
                        img.style = "width: 30px; height: 30px; margin-right: 5px;";
                        equipmentImagesContainer.appendChild(img);
                    }
                });
            } 

        } catch (error) {
            console.error('Error fetching equipment set:', error);
        }
    };
        function formatNumber(number) {
        if (number >= 1000000) {
            return (number / 1000).toFixed(0) + 'K'; // For numbers 1,000,000 and above
        } else if (number >= 1000) {
            return (number / 1000).toFixed(0) + 'K'; // For numbers between 1,000 and 999,999
        } else {
            return number.toString(); // For numbers below 1,000
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        fetchEquipmentSet(`<%= bots._id %>`,`<%= bots.equipment_set_name %>`)
    })
    </script>
</body>
</html>
